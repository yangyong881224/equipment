<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.equipment.system.mapper.EquipmentTypeMapper">
    
    <resultMap type="EquipmentType" id="EquipmentTypeResult">
        <result property="id"    column="id"    />
        <result property="typeName"    column="type_name"    />
        <result property="deleted"    column="deleted"    />
        <result property="createdAt"    column="created_at"    />
        <result property="createdBy"    column="created_by"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="updatedBy"    column="updated_by"    />
    </resultMap>

    <sql id="selectEquipmentTypeVo">
        select id, type_name, deleted, created_at, created_by, updated_at, updated_by from equipment_type
    </sql>

    <select id="selectEquipmentTypeList" parameterType="EquipmentType" resultMap="EquipmentTypeResult">
        <include refid="selectEquipmentTypeVo"/>
        <where>  
            <if test="typeName != null  and typeName != ''"> and type_name like concat('%', #{typeName}, '%')</if>
            <if test="deleted != null "> and deleted = #{deleted}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="createdBy != null  and createdBy != ''"> and created_by = #{createdBy}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
            <if test="updatedBy != null  and updatedBy != ''"> and updated_by = #{updatedBy}</if>
        </where>
    </select>
    
    <select id="selectEquipmentTypeById" parameterType="Long" resultMap="EquipmentTypeResult">
        <include refid="selectEquipmentTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEquipmentType" parameterType="EquipmentType" useGeneratedKeys="true" keyProperty="id">
        insert into equipment_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeName != null">type_name,</if>
            <if test="deleted != null">deleted,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="createdBy != null">created_by,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="updatedBy != null">updated_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeName != null">#{typeName},</if>
            <if test="deleted != null">#{deleted},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="createdBy != null">#{createdBy},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
         </trim>
    </insert>

    <update id="updateEquipmentType" parameterType="EquipmentType">
        update equipment_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null">type_name = #{typeName},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="createdBy != null">created_by = #{createdBy},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="updatedBy != null">updated_by = #{updatedBy},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEquipmentTypeById" parameterType="Long">
        delete from equipment_type where id = #{id}
    </delete>

    <delete id="deleteEquipmentTypeByIds" parameterType="String">
        delete from equipment_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>