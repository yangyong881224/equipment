<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.equipment.system.mapper.BorrowMapper">
    
    <resultMap type="Borrow" id="BorrowResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="equipmentId"    column="equipment_id"    />
        <result property="equipmentName"    column="equipment_name"    />
        <result property="createdAt"    column="created_at"    />
        <result property="returnAt"    column="return_at"    />
        <result property="examineAt"    column="examine_at"    />
        <result property="sysUserId"    column="sys_user_id"    />
        <result property="sysUserName"    column="sys_user_name"    />
        <result property="flag"    column="flag"    />
        <result property="examineFlag"    column="examine_flag"    />
        <result property="urgeReturn"    column="urge_return"    />
        <result property="realReturnAt"    column="real_return_at"    />
    </resultMap>

    <resultMap id="BorrowAndExamineVOMap" type="com.equipment.system.vo.BorrowAndExamineVO">
        <result property="groupDate" column="group_date"/>
        <result property="borrowCount" column="borrow_count"/>
        <result property="agreeCount" column="agree_count"/>
        <result property="refuseCount" column="refuse_count"/>
    </resultMap>

    <resultMap id="FavoriteEquipmentVOMap" type="com.equipment.system.vo.FavoriteEquipmentVO">
        <result property="value" column="value"/>
        <result property="name" column="name"/>
    </resultMap>

    <sql id="selectBorrowVo">
        select id, user_id, user_name, equipment_id, equipment_name, created_at, return_at, examine_at, sys_user_id, sys_user_name, flag, examine_flag, urge_return, real_return_at from borrow
    </sql>

    <select id="selectBorrowList" parameterType="Borrow" resultMap="BorrowResult">
        <include refid="selectBorrowVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="equipmentId != null "> and equipment_id = #{equipmentId}</if>
            <if test="equipmentName != null  and equipmentName != ''"> and equipment_name like concat('%', #{equipmentName}, '%')</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="returnAt != null "> and return_at = #{returnAt}</if>
            <if test="examineAt != null "> and examine_at = #{examineAt}</if>
            <if test="sysUserId != null "> and sys_user_id = #{sysUserId}</if>
            <if test="sysUserName != null  and sysUserName != ''"> and sys_user_name like concat('%', #{sysUserName}, '%')</if>
            <if test="flag != null "> and flag = #{flag}</if>
            <if test="examineFlag != null "> and examine_flag = #{examineFlag}</if>
            <if test="urgeReturn != null "> and urge_return = #{urgeReturn}</if>
            <if test="realReturnAt != null "> and real_return_at = #{realReturnAt}</if>
        </where>
    </select>
    
    <select id="selectBorrowById" parameterType="Long" resultMap="BorrowResult">
        <include refid="selectBorrowVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBorrow" parameterType="Borrow" useGeneratedKeys="true" keyProperty="id">
        insert into borrow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="equipmentId != null">equipment_id,</if>
            <if test="equipmentName != null">equipment_name,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="returnAt != null">return_at,</if>
            <if test="examineAt != null">examine_at,</if>
            <if test="sysUserId != null">sys_user_id,</if>
            <if test="sysUserName != null">sys_user_name,</if>
            <if test="flag != null">flag,</if>
            <if test="examineFlag != null">examine_flag,</if>
            <if test="urgeReturn != null">urge_return,</if>
            <if test="realReturnAt != null">real_return_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="equipmentId != null">#{equipmentId},</if>
            <if test="equipmentName != null">#{equipmentName},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="returnAt != null">#{returnAt},</if>
            <if test="examineAt != null">#{examineAt},</if>
            <if test="sysUserId != null">#{sysUserId},</if>
            <if test="sysUserName != null">#{sysUserName},</if>
            <if test="flag != null">#{flag},</if>
            <if test="examineFlag != null">#{examineFlag},</if>
            <if test="urgeReturn != null">#{urgeReturn},</if>
            <if test="realReturnAt != null">#{realReturnAt},</if>
         </trim>
    </insert>

    <update id="updateBorrow" parameterType="Borrow">
        update borrow
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="equipmentId != null">equipment_id = #{equipmentId},</if>
            <if test="equipmentName != null">equipment_name = #{equipmentName},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="returnAt != null">return_at = #{returnAt},</if>
            <if test="examineAt != null">examine_at = #{examineAt},</if>
            <if test="sysUserId != null">sys_user_id = #{sysUserId},</if>
            <if test="sysUserName != null">sys_user_name = #{sysUserName},</if>
            <if test="flag != null">flag = #{flag},</if>
            <if test="examineFlag != null">examine_flag = #{examineFlag},</if>
            <if test="urgeReturn != null "> urge_return = #{urgeReturn}</if>
            <if test="realReturnAt != null "> real_return_at = #{realReturnAt}</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBorrowById" parameterType="Long">
        delete from borrow where id = #{id}
    </delete>

    <delete id="deleteBorrowByIds" parameterType="String">
        delete from borrow where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectOverdueList" parameterType="Borrow" resultMap="BorrowResult">
        <include refid="selectBorrowVo"/>
        where user_id = #{userId} and  #{returnAt} > return_at and (flag = 1 or flag = 2)
    </select>

    <select id="selectRefunsList" parameterType="Borrow" resultMap="BorrowResult">
        <include refid="selectBorrowVo"/>
        where user_id = #{userId} and (examine_flag = 2 or examine_flag = 4)
    </select>
    
    <select id="borrowWeekCount" parameterType="Map" resultMap="BorrowAndExamineVOMap">
        SELECT COUNT(id) as borrow_count,created_at as group_date FROM `borrow`

        WHERE created_at >= #{firstDayOfWeek}

         GROUP BY group_date
    </select>

    <select id="agreeWeekCount" parameterType="Map" resultMap="BorrowAndExamineVOMap">
        SELECT COUNT(id) as agree_count,DATE_FORMAT(examine_at,'%Y-%m-%d') AS group_date FROM borrow

        WHERE examine_flag!=0 AND examine_flag!=2 AND examine_at >= #{firstDayOfWeek}

        GROUP BY group_date
    </select>

    <select id="refuseWeekCount" parameterType="Map" resultMap="BorrowAndExamineVOMap">
        SELECT COUNT(id) as refuse_count,DATE_FORMAT(examine_at,'%Y-%m-%d') AS group_date FROM borrow

        WHERE (examine_flag=0 OR examine_flag=2) AND examine_at >= #{firstDayOfWeek}

        GROUP BY group_date
    </select>

    <select id="favoriteEquipment" parameterType="Map" resultMap="FavoriteEquipmentVOMap">
        SELECT COUNT(b.id) as `value`,e.name as `name` FROM `borrow` as b

        LEFT JOIN equipment as e

            ON b.equipment_id = e.id

        WHERE b.created_at >= #{firstDayOfWeek}

        GROUP BY b.equipment_id

        LIMIT 5
    </select>
    
    <select id="inTimeReturn" parameterType="Map" resultMap="BorrowAndExamineVOMap">
        SELECT COUNT(id) AS borrow_count,DATE_FORMAT(return_at,'%Y-%m-%d') AS `group_date` FROM borrow

        WHERE flag = 3 AND return_at >=DATE_FORMAT(real_return_at,'%Y-%m-%d') AND return_at >= #{firstDayOfWeek}

        GROUP BY `group_date`
    </select>

    <select id="overTimeReturn" parameterType="Map" resultMap="BorrowAndExamineVOMap">
        SELECT COUNT(id) AS borrow_count,DATE_FORMAT(return_at,'%Y-%m-%d') AS `group_date` FROM borrow

        WHERE  DATE_FORMAT(real_return_at,'%Y-%m-%d') > return_at or DATE_FORMAT(now(),'%Y-%m-%d') > return_at AND return_at >= #{firstDayOfWeek}
        GROUP BY `group_date`
    </select>


    <select id="selectOverTimeCountByEquipmentId" parameterType="Long" resultType="Long">
        SELECT COUNT(id) FROM `borrow`
        WHERE real_return_at > return_at
           OR (real_return_at IS NULL AND now() > return_at)
           AND equipment_id=#{equipmentId}
    </select>

    <select id="selectUrgeCountByEquipmentId" parameterType="Long" resultType="Long">
        SELECT COUNT(id) FROM `borrow` WHERE urge_return = 1 AND equipment_id = #{equipmentId}
    </select>


    <select id="selectUnBack" parameterType="Borrow" resultMap="BorrowResult">
        <include refid="selectBorrowVo"/> where user_id=#{userId} and equipment_id=#{equipmentId} and flag!=3
    </select>
</mapper>