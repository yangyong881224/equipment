<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.equipment.system.mapper.EquipmentMapper">
    
    <resultMap type="Equipment" id="EquipmentResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="typeId"    column="type_id"    />
        <result property="modelNum"    column="model_num"    />
        <result property="quantity"    column="quantity"    />
        <result property="flag"    column="flag"    />
        <result property="createdAt"    column="created_at"    />
        <result property="createdBy"    column="created_by"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="updatedBy"    column="updated_by"    />
        <result property="path"    column="path"    />
        <result property="borrowNum"    column="borrow_num"    />
        <result property="borrowQuantity"    column="borrow_quantity"    />
    </resultMap>

    <sql id="selectEquipmentVo">
        select id,name, type_id, model_num, quantity, flag, created_at, created_by, updated_at, updated_by,path, borrow_num, borrow_quantity from equipment
    </sql>

    <select id="selectEquipmentList" parameterType="Equipment" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        <where>  
            <if test="typeId != null "> and type_id = #{typeId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="modelNum != null  and modelNum != ''"> and model_num = #{modelNum}</if>
            <if test="quantity != null "> and quantity = #{quantity}</if>
            <if test="flag != null and flag != -1"> and flag = #{flag}</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="createdBy != null  and createdBy != ''"> and created_by = #{createdBy}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
            <if test="updatedBy != null  and updatedBy != ''"> and updated_by = #{updatedBy}</if>
            <if test="borrowNum != null  and borrowNum != ''"> and borrow_num = #{borrowNum}</if>
            <if test="borrowQuantity != null  and borrowQuantity != ''"> and borrow_quantity = #{borrowQuantity}</if>
        </where>
    </select>
    
    <select id="selectEquipmentById" parameterType="Long" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEquipment" parameterType="Equipment" useGeneratedKeys="true" keyProperty="id">
        insert into equipment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeId != null">type_id,</if>
            <if test="path != null">path,</if>
            <if test="name != null">name,</if>
            <if test="modelNum != null">model_num,</if>
            <if test="quantity != null">quantity,</if>
            <if test="flag != null">flag,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="createdBy != null">created_by,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="updatedBy != null">updated_by,</if>
            <if test="borrowNum != null">borrow_num,</if>
            <if test="borrowQuantity != null">borrow_quantity,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeId != null">#{typeId},</if>
            <if test="path != null">#{path},</if>
            <if test="name != null">#{name},</if>
            <if test="modelNum != null">#{modelNum},</if>
            <if test="quantity != null">#{quantity},</if>
            <if test="flag != null">#{flag},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="createdBy != null">#{createdBy},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
            <if test="borrowNum != null">#{borrowNum},</if>
            <if test="borrowQuantity != null">#{borrowQuantity},</if>
         </trim>
    </insert>

    <update id="updateEquipment" parameterType="Equipment">
        update equipment
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeId != null">type_id = #{typeId},</if>
            <if test="name != null">`name` = #{name},</if>
            <if test="path != null">path = #{path},</if>
            <if test="modelNum != null">model_num = #{modelNum},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="flag != null">flag = #{flag},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="createdBy != null">created_by = #{createdBy},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="updatedBy != null">updated_by = #{updatedBy},</if>
            <if test="borrowNum != null">borrow_num = #{borrowNum},</if>
            <if test="borrowQuantity != null">borrow_quantity = #{borrowQuantity},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEquipmentById" parameterType="Long">
        update equipment set flag = 1 where id = #{id}
    </delete>

    <delete id="deleteEquipmentByIds" parameterType="String">
        update equipment set flag=1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="agreeBorrow" parameterType="Long">
        update equipment set borrow_quantity=borrow_quantity+1 , borrow_num=borrow_num+1 where id=#{equipmentId}
    </update>

    <update id="agreeReturn" parameterType="Long">
        update equipment set borrow_quantity=borrow_quantity-1 where id=#{equipmentId}
    </update>

</mapper>